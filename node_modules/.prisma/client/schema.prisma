generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model csgi_class {
  classid      Int           @id @default(autoincrement())
  classname    String        @db.VarChar(80)
  class_desc   String        @db.VarChar(200)
  userid       Int?
  gradeid      Int?
  roomid       Int?
  created_date DateTime      @default(now()) @db.Timestamptz(6)
  created_by   String?       @db.VarChar(40)
  updated_date DateTime?     @db.Timestamptz(6)
  updated_by   String?       @db.VarChar(40)
  csgi_grade   csgi_grade?   @relation(fields: [gradeid], references: [gradeid])
  csgi_room    csgi_room?    @relation(fields: [roomid], references: [roomid])
  csgi_user    csgi_user?    @relation(fields: [userid], references: [userid])
  csgi_roster  csgi_roster[]
}

model csgi_grade {
  gradeid      Int          @id @default(autoincrement())
  gradecode    String       @db.VarChar(4)
  grade        String       @db.VarChar(20)
  created_date DateTime     @default(now()) @db.Timestamptz(6)
  created_by   String       @default("ADMIN") @db.VarChar(40)
  updated_date DateTime?    @db.Timestamptz(6)
  updated_by   String?      @db.VarChar(40)
  csgi_class   csgi_class[]
}

model csgi_menu {
  menuid         Int              @id @default(autoincrement())
  menuname       String           @db.VarChar(20)
  created_date   DateTime         @default(now()) @db.Timestamptz(6)
  created_by     String           @default("ADMIN") @db.VarChar(40)
  updated_date   DateTime?        @db.Timestamptz(6)
  updated_by     String?          @db.VarChar(40)
  csgi_menu_item csgi_menu_item[]
}

model csgi_menu_item {
  itemid         Int              @id @default(autoincrement())
  itemname       String           @db.VarChar(20)
  menuid         Int?
  created_date   DateTime         @default(now()) @db.Timestamptz(6)
  created_by     String           @default("ADMIN") @db.VarChar(40)
  updated_date   DateTime?        @db.Timestamptz(6)
  updated_by     String?          @db.VarChar(40)
  csgi_menu      csgi_menu?       @relation(fields: [menuid], references: [menuid])
  csgi_menu_role csgi_menu_role[]
}

model csgi_menu_role {
  menu_roleid    Int            @id @default(autoincrement())
  roleid         Int
  itemid         Int
  created_date   DateTime       @default(now()) @db.Timestamptz(6)
  created_by     String         @default("ADMIN") @db.VarChar(40)
  updated_date   DateTime?      @db.Timestamptz(6)
  updated_by     String?        @db.VarChar(40)
  csgi_menu_item csgi_menu_item @relation(fields: [itemid], references: [itemid])
  csgi_role      csgi_role      @relation(fields: [roleid], references: [roleid])
}

model csgi_period {
  periodid     Int           @id @default(autoincrement())
  periodname   String        @db.VarChar(20)
  period_desc  String?       @db.VarChar(200)
  period_start DateTime      @db.Timetz(6)
  period_end   DateTime      @db.Timetz(6)
  created_date DateTime      @default(now()) @db.Timestamptz(6)
  created_by   String        @default("ADMIN") @db.VarChar(40)
  updated_date DateTime?     @db.Timestamptz(6)
  updated_by   String?       @db.VarChar(40)
  period_date  DateTime?     @db.Date
  csgi_roster  csgi_roster[]
}

model csgi_role {
  roleid         Int              @id @default(autoincrement())
  role           String           @unique @db.VarChar(200)
  created_date   DateTime         @default(now()) @db.Timestamptz(6)
  created_by     String           @default("ADMIN") @db.VarChar(40)
  updated_date   DateTime?        @db.Timestamptz(6)
  updated_by     String?          @db.VarChar(40)
  csgi_menu_role csgi_menu_role[]
  csgi_user_role csgi_user_role[]
}

model csgi_room {
  roomid       Int          @id @default(autoincrement())
  roomcode     String       @db.VarChar(8)
  room_desc    String?      @db.VarChar(200)
  location     String?      @db.VarChar(200)
  created_date DateTime     @default(now()) @db.Timestamptz(6)
  created_by   String       @default("ADMIN") @db.VarChar(40)
  updated_date DateTime?    @db.Timestamptz(6)
  updated_by   String?      @db.VarChar(40)
  csgi_class   csgi_class[]
}

model csgi_roster {
  rosterid     Int          @id @default(autoincrement())
  classid      Int
  periodid     Int
  studentid    Int
  attended_yn  String       @default("N") @db.VarChar(1)
  created_date DateTime     @default(now()) @db.Timestamptz(6)
  created_by   String       @default("ADMIN") @db.VarChar(40)
  updated_date DateTime?    @db.Timestamptz(6)
  updated_by   String?      @db.VarChar(40)
  csgi_class   csgi_class   @relation(fields: [classid], references: [classid])
  csgi_period  csgi_period  @relation(fields: [periodid], references: [periodid])
  csgi_student csgi_student @relation(fields: [studentid], references: [studentid])
}

model csgi_student {
  studentid     Int           @id @default(autoincrement())
  student_name  String?       @db.VarChar(40)
  last_name     String        @db.VarChar(200)
  date_of_birth DateTime?     @db.Date
  gender        String?       @db.VarChar(1)
  created_date  DateTime      @default(now()) @db.Timestamptz(6)
  created_by    String        @default("ADMIN") @db.VarChar(40)
  updated_date  DateTime?     @db.Timestamptz(6)
  updated_by    String?       @db.VarChar(40)
  csgi_roster   csgi_roster[]
}

model csgi_user {
  userid         Int              @id @default(autoincrement())
  username       String           @db.VarChar(200)
  email          String           @unique @db.VarChar(200)
  first_name     String?          @db.VarChar(40)
  last_name      String           @db.VarChar(200)
  password       String           @db.VarChar(200)
  created_date   DateTime         @default(now()) @db.Timestamptz(6)
  created_by     String?          @db.VarChar(40)
  updated_date   DateTime?        @db.Timestamptz(6)
  updated_by     String?          @db.VarChar(40)
  csgi_class     csgi_class[]
  csgi_user_role csgi_user_role[]
}

model csgi_user_role {
  user_roleid  Int       @id @default(autoincrement())
  userid       Int
  roleid       Int
  created_date DateTime  @default(now()) @db.Timestamptz(6)
  created_by   String    @default("ADMIN") @db.VarChar(40)
  updated_date DateTime? @db.Timestamptz(6)
  updated_by   String?   @db.VarChar(40)
  csgi_role    csgi_role @relation(fields: [roleid], references: [roleid])
  csgi_user    csgi_user @relation(fields: [userid], references: [userid])
}
